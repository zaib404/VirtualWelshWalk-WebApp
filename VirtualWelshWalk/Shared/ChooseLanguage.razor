@inject NavigationManager NavigationManager
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration

@if (cultures != null)
{
<div class="d-none d-sm-block">
    <div class="custom-control custom-switch">
        <input type="checkbox" @bind="isWelshChecked" @onclick="() => RequestCultureChange(isWelshChecked = !isWelshChecked)" class="custom-control-input" id="lngSwitch">
        <label class="custom-control-label" for="lngSwitch">EN/CY</label>
    </div>
</div>

<div class="d-block d-sm-none">
    <select @onchange="() => RequestCultureChange(isWelshChecked = !isWelshChecked)">
        <option>Select...</option>
        <option value="en-UK">English</option>
        <option value="cy">Welsh</option>
    </select>
</div>

}

@code {

    private string selectedCulture = System.Threading.Thread.CurrentThread.CurrentCulture.Name;
    private Dictionary<string, string> cultures;
    bool isWelshChecked { get; set; }

    protected override void OnInitialized()
    {
        cultures = Configuration.GetSection("Cultures")
            .GetChildren().ToDictionary(x => x.Key, x => x.Value);

        if (selectedCulture.ToLower() == "en-gb".ToLower())
        {
            isWelshChecked = false;
        }
        else
        {
            isWelshChecked = true;
        }
    }

    private void RequestCultureChange(bool pWelshCheck)
    {
        var uri = new Uri(NavigationManager.Uri)
        .GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);

        if (!pWelshCheck)
        {
            selectedCulture = cultures.FirstOrDefault(x => x.Value.ToLower() == "English".ToLower()).Key;
        }
        else
        {
            selectedCulture = cultures.FirstOrDefault(x => x.Value.ToLower() == "Welsh".ToLower()).Key;
        }
        var query = $"?culture={Uri.EscapeDataString(selectedCulture)}&" +
        $"redirectUri={Uri.EscapeDataString(uri)}";

        NavigationManager.NavigateTo("/Culture/SetCulture" + query, forceLoad: true);

        isWelshChecked = pWelshCheck;

    }

}
