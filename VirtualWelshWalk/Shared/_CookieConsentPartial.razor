@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Authentication;
@using Microsoft.AspNetCore.Authentication.Cookies;
@using Microsoft.AspNetCore.Authorization;

@inject IHttpContextAccessor hca
@inject IJSRuntime JSRuntime


@if (showBanner)
{
    // Show modal/popup of user confirming
    <div class="modal-backdrop fade show"></div>

    <div class="modal fade show" tabindex="-1" role="dialog" style="display: block;">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">

                <div class="modal-body">
                    <div id="cookieConsent">
                        <p style="padding-right:3em;">@Localizer["This website uses cookies and requires your consent"] <a href="privacy-policy">@Localizer["Learn More"]</a>.</p>
                        <button type="button" class="btn btn-primary" style="width:100%; background-color:#af3182; border-color:#af3182;" data-dismiss="alert" aria-label="Close" data-cookie-string="@cookieString" @onclick="AcceptMessage">
                            <span aria-hidden="true">@Localizer["Accept"]</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    ITrackingConsentFeature consentFeature;
    bool showBanner;
    string cookieString;

    protected override void OnInitialized()
    {
        consentFeature = hca.HttpContext.Features.Get<ITrackingConsentFeature>();
        showBanner = !consentFeature?.CanTrack ?? false;
        cookieString = consentFeature?.CreateConsentCookie();
    }

    private void AcceptMessage()
    {
        JSRuntime.InvokeVoidAsync(
            "cookieJsFunctions.acceptMessage",
            cookieString);

        showBanner = false;
    }
}